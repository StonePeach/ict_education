1.인스턴스 변수란?
-> 클래스가 있는 객체 지향 프로그래밍에서 인스턴스 변수는 클래스에 정의된 변수이다.

2. 지역 변수란?
-> 특정한 구역 ({ }) 안에 생성되어 그 지역에만 사용할수 있는 변수는 지역변수 이다.

3. 클래스의 구성 요소는?
-> 필드: 객체를 사용할 동안 지속적으로 사용되는 데이터 이다.
           주로 private 사용을 한다. (외부 접근 불가)
           클래스 내부에 있는 메소드를 통해 사용을 하게 하는 방법이다.
    
    생성자: 항상 명시적으로 만들지 않을 경우 디폴트 생성자 한개를 자동으로 제공한다.
              객체 생성시 자동 호출 되어야 한다.
              함수명은 클래스명과 동일하다.
     
    메소드: 외부와 내부를 연결시켜주는 기능이다.
              어떠한 문제를 처리하기위한 방법을 소스 코드로 묶어놓고 필요에따라 호출한다.

4.원의 넓이는 구하는 프로그램**을 아래와 같이 작성하시오.

- 원 클래스를 만들 것
- 메인 메소드를 가진 다른 클래스에서 원 객체를 생성할 것

            public static void main(String args[]) {
		Circle circle = new Circle();
		
		circle.setR(5);
		
		System.out.println(circle.circleArea());
		
	}

public class Circle {
	private int r;
	private double PI = 3.14;
	
	public void setR(int r) {
		this.r = r;
	}
	
	public double circleArea() {
		
		return r*r*PI;
	}
	
	
}



5.사각형의 넓이를 구하는 프로그램

- 사각형 클래스를 만들 것
- 메인 메소드를 가진 다른 클래스에서 사각형 객체를 생성할 것

public class Test01 {
	public static void main(String args[]) {
		Rectangle rec = new Rectangle();
		
		rec.setWidth(10);
		rec.setHeight(20);
		
		System.out.println(rec.getArea());
		
		
	}
	
}

public class Rectangle {

	private int width;
	private int height;

	public void setWidth(int width) {
		this.width = width;
	}
	
	public void setHeight(int height) {
		this.height = height;
	}

	public int getArea() {

		return width * height;
	}

}



6.성적표 구하는 프로그램을 만드시오.
- Grade 클래스 
- 국영수 인스턴스 변수(각각의 setter getter 함수)
-getTotal ,getAvg()
- 메인 메소드를 가진 다른 클래스에서 Grade 객체 
객체를 생성한다는 것은 해당 클래스의 .class 파일을 메모리에 올린다는 것을 의미한다.

public class Test01 {
	public static void main(String args[]) {
		Grade grade = new Grade();
		
		grade.setKor(70);
		grade.setEng(80);
		grade.setMath(90);
		
		System.out.println(grade.getTotal());
		System.out.println(grade.getAvg());
		
	}
	
}

public class Grade {
	int kor, eng, math;
	
	public void setKor(int kor) {
		this.kor = kor;
	}
	
	
	public void setEng(int eng) {
		this.eng = eng;
	}
	
	
	public void setMath(int math) {
		this.math = math;
	}
	
	
	public int getTotal() {
		
		return kor+eng+math;
	}
	
	
	public double getAvg() {
		
		return getTotal() / 3.0;
	}
	
	
	
}


7. 객체란 무엇인가?
-> 객체란 물리적으로 존재하거나 추상적으로 생각할 수 있는 것 중에서 자신의 속성을
    가지고 있고 다른것과 식별 가능한 것을 말합니다.


8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.  
Rectangle r = new Rectangle(); 
public class Rectangle {
int height;
int width;

public int getHeight() {
	return height;
}

public void setHeight(int height) {
	this.height = height;
}

public int getWidth() {
	return width;
}

public void setWidth(int width) {
	this.width = width;
}

public int getArea() {
	return width * height;
}

// *정확하지 않음* 쌤한테 물어봐야함
   
->  1004 자료형: Rectangle      2000
            |-------------|                 |-------------|
            |____2000____|          2004 |_____________|  height
     1000      이름: r                     |_____________|   
                                       2008                  width




9. 클래스와 객체의 차이는?
-> 클래스란 객체를 만들기 위한 설계도 이다. 해당 설계도를 통해 만들어진 무언가를 객체라고 한다.


10. 아래의 프로그램을 작성하시오.

- 1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오.

1) 합을 구할 수 있는 GetSum클래스를 통해 getsum 객체를 생성
2) num 까지의 합을 구해야 하므로 num값이 변할 수 있도록 num 변수를 선언
예를 들어서 50까지의 합을 구하기 위해 num변수에  50을 대입
3) getsum객체의 setNum함수를 이용해  num(여기서는 50)값 저장
4) getsum객체의 sum함수를 이용해 1부터 50(num)까지의 값을 구함

public class Test01 {
	public static void main(String args[]) {
		GetSum getsum = new GetSum();
		
		getsum.setNum(50);
		System.out.println(getsum.sum());
		
	}
	
}

public class GetSum {
	private int num;
	
	public void setNum(int num) {
		this.num = num;
	}
	
	public int sum() {
		int sum = 0;
		
		for(int i=1; i<=num; i++) {
			sum += i;
		}		
		
		return sum;
	}
	
}



11. 아래의 클래스를 작성하시오.

StarPrint strPrint = new StarPrint();

strPrint.printTriangle(3); 
System.out.println();
strPrint.printReverseTriangle(3); 

*
**
***

***
**
*

public class Test01 {
	public static void main(String args[]) {
		StarPrint strPrint = new StarPrint();
		
		strPrint.printTriangle(3);
		System.out.println();
		strPrint.printReverseTriangle(3);
		
	}
	
}

public class StarPrint {
	
	public void printTriangle(int n) {
		for(int i=0; i<n; i++) {
			for(int j=0; j<=i; j++) {
				System.out.print("*");
			}
			System.out.println();
		}
		
	}
	
	public void printReverseTriangle(int n) {
		for(int i=0; i<n; i++) {
			for(int j=0; j<n-i; j++) {
				System.out.print("*");
			}
			System.out.println();
		}
		
	}
	
	
}




12. 아래의 프로그래밍을 작성하시오.

Gugudan gugudan = new Gugudan();
gugudan.printGugu(10);  //1단부터 10단까지 출력
gugudan.printGugu(20);  //1단부터 20단까지 출력


public class Test01 {
	public static void main(String args[]) {
		Gugudan gugudan = new Gugudan();
		
		gugudan.printGugu(10);		
		gugudan.printGugu(20);		
		
	}
	
}


public class Gugudan {
	
	public void printGugu(int n) {
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=9; j++) {
				System.out.println(i + "*" + j + "=" + i*j);
				
			}
			System.out.println();
		}
		
	}
	
}







